- hosts: jenkins
  become: true
  pre_tasks:
    - name: Update apt
      ansible.builtin.apt:
        update_cache: yes

  vars:
    jenkins_plugins:
      - workflow-aggregator
      - pipeline-stage-view
      - ssh-agent
      - github
      - nodejs

  roles:
    - role: geerlingguy.java
      when: "ansible_os_family == 'Debian'"
      java_packages:
        - openjdk-17-jre
    - role: geerlingguy.jenkins

  tasks:
    - name: Warten, bis Jenkins vollst채ndig gestartet ist
      ansible.builtin.wait_for:
        path: /var/lib/jenkins/jenkins.install.UpgradeWizard.state
        timeout: 60
      when: ansible_os_family == "Debian"

    - name: NodeJS-Plugin konfigurieren (NodeJS 23.8.0 installieren)
      template:
        src: templates/jenkins.plugins.nodejs.tools.NodeJSInstallation.xml.j2
        dest: /var/lib/jenkins/jenkins.plugins.nodejs.tools.NodeJSInstallation.xml
        owner: jenkins
        group: jenkins
        mode: '0644'
      notify: restart jenkins

    - name: Hole Jenkins-Crumb f체r Authentifizierung
      uri:
        url: "http://{{ inventory_hostname }}:8080/crumbIssuer/api/json"
        method: GET
        user: "admin"
        password: "admin"
        force_basic_auth: yes
        return_content: yes
      register: jenkins_crumb

    - name: Debug Jenkins Crumb Response
      debug:
        var: jenkins_crumb.json

    - name: Erstelle API-Token f체r admin
      uri:
        url: "http://{{ inventory_hostname }}:8080/user/admin/descriptorByName/jenkins.security.ApiTokenProperty/generateNewToken"
        method: POST
        user: "admin"
        password: "admin"
        force_basic_auth: yes
        headers:
          Content-Type: "application/json"
          Jenkins-Crumb: "{{ jenkins_crumb.json.crumb }}"
        body: '{"newTokenName": "ansible-token"}'
        body_format: json
        return_content: yes
      register: jenkins_token_response

    - name: Debug Jenkins Token Response
      debug:
        var: jenkins_token_response.json

    - name: Extrahiere API-Token aus der Antwort
      set_fact:
        jenkins_api_token: "{{ jenkins_token_response.json.data.tokenValue }}"

    - name: Erstelle einfachen Pipeline-Job f체r GitHub-Repo
      uri:
        url: "http://{{ inventory_hostname }}:8080/createItem?name=Kaiwa-Pipeline"
        method: POST
        user: "admin"
        password: "{{ jenkins_api_token }}"
        force_basic_auth: yes
        headers:
          Content-Type: "application/xml"
          Jenkins-Crumb: "{{ jenkins_crumb.json.crumb }}"
        body: "{{ lookup('template', 'templates/kaiwa-pipeline.xml.j2') }}"
        status_code: [200, 201]

  handlers:
    - name: restart jenkins
      service:
        name: jenkins
        state: restarted