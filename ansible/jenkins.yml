- name: Jenkins installieren und konfigurieren
  hosts: jenkins
  become: true
  pre_tasks:
    - name: Update apt
      ansible.builtin.apt:
        update_cache: yes

  vars:
    jenkins_plugins:
      - workflow-aggregator
      - pipeline-stage-view
      - ssh-agent
      - github
      - nodejs
    credential_id: "jenkins-ec2-key"
    credential_username: "ubuntu"
    ssh_private_key: "{{ lookup('file', '~/.ssh/universal-neu.pem') }}"
    docker_users:
      - ubuntu
      - jenkins

  roles:
    - role: geerlingguy.java
      when: "ansible_os_family == 'Debian'"
      java_packages:
        - openjdk-17-jre
    - role: geerlingguy.jenkins

  tasks:
    - name: Warten, bis Jenkins vollständig gestartet ist
      ansible.builtin.wait_for:
        path: /var/lib/jenkins/jenkins.install.UpgradeWizard.state
        timeout: 60
      when: ansible_os_family == "Debian"

    - name: Jenkins CLI herunterladen
      get_url:
        url: "http://{{ inventory_hostname }}:8080/jnlpJars/jenkins-cli.jar"
        dest: /tmp/jenkins-cli.jar
        mode: '0755'

    - name: NodeJS-Plugin konfigurieren (NodeJS 23.8.0 installieren)
      template:
        src: templates/jenkins.plugins.nodejs.tools.NodeJSInstallation.xml.j2
        dest: /var/lib/jenkins/jenkins.plugins.nodejs.tools.NodeJSInstallation.xml
        owner: jenkins
        group: jenkins
        mode: '0644'
        force: yes
      notify: restart jenkins

    - name: Starte Jenkins neu
      service: 
        name: jenkins
        state: restarted
      when: ansible_os_family == "Debian"

    - name: Füge SSH-Private-Key als Credential hinzu
      command: >
        java -jar /tmp/jenkins-cli.jar -s http://{{ inventory_hostname }}:8080/ -auth admin:admin
        create-credentials-by-xml system::system::jenkins _
      args:
        chdir: /tmp
        stdin: "{{ lookup('template', 'templates/ssh-credential.xml.j2') }}"
      when: ansible_os_family == "Debian"

    - name: Erstelle Pipeline-Job mit Jenkins CLI
      command: >
        java -jar /tmp/jenkins-cli.jar -s http://{{ inventory_hostname }}:8080/ -auth admin:admin create-job Kaiwa-Pipeline
      args:
        chdir: /tmp
        stdin: "{{ lookup('file', 'templates/kaiwa-pipeline.xml.j2') }}"
      when: ansible_os_family == "Debian"

  handlers:
    - name: restart jenkins
      service:
        name: jenkins
        state: restarted